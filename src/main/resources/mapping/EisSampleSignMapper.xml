<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.eis.mapper.EisSampleSignMapper">
  <resultMap id="BaseResultMap" type="com.ai.eis.model.EisSampleSign">
    <result column="ID" javaType="INTEGER" property="id"/>
    <result column="PROJECT_ID" jdbcType="INTEGER" property="projectId" />
    <result column="SAMPLE_NAME" jdbcType="VARCHAR" property="sampleName" />
    <result column="SING_NUM" jdbcType="INTEGER" property="singNum" />
    <result column="COMPANY" jdbcType="VARCHAR" property="company" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="CONTACT" jdbcType="VARCHAR" property="contact" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="SIGN_DATE" jdbcType="TIMESTAMP" property="signDate" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <insert id="insert" parameterType="com.ai.eis.model.EisSampleSign">
    insert into eis_sample_sign (PROJECT_ID, SAMPLE_NAME, SING_NUM, 
      COMPANY, ADDRESS, CONTACT, 
      PHONE, SIGN_DATE, TYPE, 
      STATUS)
    values (#{projectId,jdbcType=INTEGER}, #{sampleName,jdbcType=VARCHAR}, #{singNum,jdbcType=INTEGER}, 
      #{company,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{signDate,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.eis.model.EisSampleSign">
    insert into eis_sample_sign
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="sampleName != null">
        SAMPLE_NAME,
      </if>
      <if test="singNum != null">
        SING_NUM,
      </if>
      <if test="company != null">
        COMPANY,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="contact != null">
        CONTACT,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="signDate != null">
        SIGN_DATE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="sampleName != null">
        #{sampleName,jdbcType=VARCHAR},
      </if>
      <if test="singNum != null">
        #{singNum,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from eis_sample_sign
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <select id="listSignRecord" resultMap="BaseResultMap" parameterType="Map">
    select
    ID, PROJECT_ID, SAMPLE_NAME, SING_NUM,
    COMPANY, ADDRESS, CONTACT,
    PHONE, SIGN_DATE, TYPE,
    STATUS
    from eis_sample_sign
    <where>
      <if test="pId != null and pId !=''">
        PROJECT_ID = #{pId}
      </if>
      <if test="name != null and name != ''">
        and SAMPLE_NAME like #{name}
      </if>
    </where>
  </select>

  <select id="listProject" resultType="java.util.HashMap" parameterType="Map">
    SELECT
    a.PROJECT_ID as projectId,
    a.PROJECT_NAME as projectName,
    a.CLIENT_COMPANY as clientCompany,
    a.CLIENT_ADDRESS as clientAddress,
    a.CONTACT as contact,
    a.CONTACT_WAY as contactWay,
    a.SAMPLE_NUM as sampleNum,
    a.MF_NAME as mfName,
    a.TEST_COST as testCost,
    a.CF_COST as cfCost,
    a.TOTAL_COST as totalCost,
    a.REGISTE_DATE as registeDate,
    v1.SEND_TOTAL as sendTotal,
    v2.SIGN_TOTAL as signTotal
    FROM
    eis_resource_contract a
    LEFT JOIN (
    SELECT
    b.PROJECT_ID,
    SUM(b.SEND_NUM) AS SEND_TOTAL
    FROM
    eis_sample_send b
    GROUP BY
    b.PROJECT_ID
    ) v1 ON v1.PROJECT_ID = a.PROJECT_ID
    LEFT JOIN (
    SELECT
    c.PROJECT_ID,
    SUM(c.SING_NUM) AS SIGN_TOTAL
    FROM
    eis_sample_sign c
    GROUP BY
    c.PROJECT_ID
    ) v2 ON v2.PROJECT_ID = a.PROJECT_ID
    <where>
      <if test="name != null and name !=''">
        a.PROJECT_NAME like #{name}
      </if>
    </where>
  </select>


  
</mapper>